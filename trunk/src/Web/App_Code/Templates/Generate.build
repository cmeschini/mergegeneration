<?xml version="1.0"?>
<project name="Templates" default="DoModel" xmlns="http://nant.sf.net/release/0.85/nant.xsd">


  


  <!-- Parametros de entrada para el "engine de versionado" -->
  <property name ="target.dir" value="..\" />
  <property name ="Entity" value="Persona"/>
  <!-- Modificar aqui el nombre de la entidad -->
  <property name ="entity" value="persona"/>
  <property name ="increment.version" value ="false"/>

  <!-- incluye el "engine de versionado" -->
  <property name ="engine.dir" value ="C:\PuntoNet\Desarrollo2005\TemplateNant"/>
  <include buildfile ="${engine.dir}\EngineVersionTemplates.build"/>

  <!-- Parametros de salida del "engine de versionado". -->
  <!-- Descomentar para test!!! -->
  <!-- 
  <property name ="templates.dir" value="." />
  <property name ="generated.dir" value=".\version\Generated"/>
  -->
 
  <target name="DoModel" >
    <property name ="increment.version" value ="true"/>
    <property name="entities_model" value="Persona;Empresa;Telefono"/>
    <echo message ="DoModel..."/>


    <foreach item="String" in="${entities_model}" delim=";" property="Entity">
        <echo message ="Process ${Entity}..."/>
        <property name ="entity" value="${Entity}"/>
        <call target="CallEngineVersion" />
        <property name ="increment.version" value ="false"/>
    </foreach>
  </target>

  <target name="CallEngineVersion">
    <call target="InitVersion" />
  </target>

  <!-- Interfaz con el "engine de versionado" -->
  <target name ="Generate">
    <call target ="GenerateEntity"/>
  </target>

  <!-- Un target por template -->
  <target name ="GenerateEntity">
    <property name ="template.file" value ="_Entity0.cs"/>
    <property name ="target.file" value ="${Entity}.cs"/>
    <copy file="${templates.dir}\${template.file}" tofile="${generated.dir}\${target.file}" >
      <filterchain>
        <replacetokens begintoken="_" endtoken="0">
          <token key="Entity" value="${Entity}" />
          <token key="__entity" value="${entity}" />
        </replacetokens>
      </filterchain>
    </copy>

    <!-- Hace backup del archivo existente -->
    <call target ="dobackup"/>

    <!-- Copia el archivo generado en el archivo final o 
         hace un diff y escribe los cambios correspondientes.
         Descomentar lo que corresponda -->
    <!-- 
    <call target ="generateovertarget"/>
    -->
    <call target ="dodiffdefault"/>

  </target>

</project>
